<!doctype html>
<html lang="en">
<%- include('../snippets/head.ejs'); %>
<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/v/bs5/jq-3.6.0/dt-1.13.1/b-2.3.3/b-colvis-2.3.3/fh-3.3.1/sl-1.5.0/datatables.min.css"/>
<body>

<%
function mode(arr) {
    const mappedArr = arr.map(submission => submission.wadName);
    return mappedArr.sort((a, b) =>
            mappedArr.filter(v => v === a).length
            - mappedArr.filter(v => v === b).length
    ).pop();
}
%>
<div id="overlay" class="hidden">
    <div id="loader" class="hidden"></div>
</div>
<div class="container mt-5">
    <main>
        <% if(indexModel.currentActiveRound){ %>
            <div class="row">
                <div class="col-md-12">
                    <div class="card border-primary mb-3">
                        <div class="card-header">Round <%- indexModel.currentActiveRound.id; -%></div>
                        <div class="card-body text-center">
                            <% if(indexModel.currentActiveRound.paused){ %>
                                <h5 class="card-title mb-4 text-danger">Round is currently paused</h5>
                            <% }else{ %>
                                <h5 class="card-title mb-4 text-success">Round is active</h5>
                            <% } %>
                            <div class="row">
                                <div class="col-md-4">
                                    <h5 class="card-title text-primary">Number of submissions</h5>
                                    <h5 class="card-text"><%- indexModel.currentActiveRound.submissions?.length ?? 0; -%></h5>
                                </div>
                                <div class="col-md-4">
                                    <h5 class="card-title text-primary">Most requested WAD</h5>
                                    <h5 class="card-text"><%- mode(indexModel.currentActiveRound.submissions); -%></h5>
                                </div>
                                <div class="col-md-4">
                                    <h5 class="card-title text-primary">Number of map authors</h5>
                                    <h5 class="card-text"><%- indexModel.currentActiveRound.submissions?.filter(submission => submission.submitterAuthor)?.length ?? 0; -%></h5>
                                </div>
                            </div>
                        </div>
                        <div class="card-footer text-center">
                            <div class="btn-group" role="group" aria-label="Basic outlined example">
                                <% if(indexModel.currentActiveRound.paused){ %>
                                    <button type="button" class="btn btn-outline-primary" data-bs-toggle="modal" data-bs-target="#resumeRoundModal">Resume round</button>
                                <% } else { %>
                                    <button type="button" class="btn btn-outline-primary" data-bs-toggle="modal" data-bs-target="#pauseRoundModal">Pause round</button>
                                <% } %>
                                <button type="button" class="btn btn-outline-danger">End round</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row mt-5">
                <div class="col-md-12">
                    <div class="card border-primary mb-3 ml-3">
                        <div class="card-header">Current submissions</div>
                        <div class="card-body">
                            <%- include('../snippets/SubmissionsTable.ejs', {
                            submissions: indexModel.currentActiveRound.submissions,
                            includeDownload: true,
                            isAdmin: true
                            }); %>
                        </div>
                    </div>
                </div>
            </div>
        <% }else { %>
            make a new one i guess
        <% } %>
        <% if(indexModel.previousRounds.length > 0){ %>
            <div class="row mt-5">
                <div class="col-md-12">
                    <%- include('../snippets/resultTable.ejs', {
                    model: indexModel,
                    includeDownload: true,
                    isAdmin: true
                    }); %>
                </div>
            </div>
        <% } %>
    </main>
</div>
<% if(indexModel.currentActiveRound){ %>
    <% if(indexModel.currentActiveRound.paused){ %>
        <div class="modal fade" id="resumeRoundModal" tabindex="-1" aria-labelledby="resumeRoundModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h1 class="modal-title fs-5" id="resumeRoundModalLabel">Resume round <%- indexModel.currentActiveRound.id; -%></h1>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <p>Resuming this round will allow submissions again</p>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary" id="resumeRoundButton">Resume</button>
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    </div>
                </div>
            </div>
        </div>
    <% } else { %>
        <div class="modal fade" id="pauseRoundModal" tabindex="-1" aria-labelledby="pauseRoundModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h1 class="modal-title fs-5" id="pauseRoundModalLabel">Pause round <%- indexModel.currentActiveRound.id; -%></h1>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <p>Are you sure you wish to pause this round? this will lock the round and prevent anyone from submitting any more entries</p>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary" id="pauseRoundButton">Pause</button>
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    </div>
                </div>
            </div>
        </div>
    <% } %>
<% } %>
<div class="modal fade" id="submissionInfoModal" tabindex="-1" aria-labelledby="submissionInfoModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="submissionInfoModalLabel"></h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="submissionInfoContent">

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" id="pauseRoundButton">Ok</button>
            </div>
        </div>
    </div>
</div>


<script type="text/javascript" src="https://cdn.datatables.net/v/bs5/jq-3.6.0/dt-1.13.1/b-2.3.3/b-colvis-2.3.3/fh-3.3.1/sl-1.5.0/datatables.min.js"></script>
<%- include('../snippets/scripts.ejs'); %>
<script>
    Site.loadPage(async site => {
        const submissionInfoModal = new bootstrap.Modal('#submissionInfoModal');

        loadEventListeners();
        initDt();


        function showSubmissionInfoModel(id, wadName, wadLevel, wadEngine, gzDoomAction, submitterName, author, distributable, info, email, downloadUrl) {
            const modalContentWrapper = document.getElementById("submissionInfoContent");
            const modalTitle = document.getElementById("submissionInfoModalLabel");

            const title = `Info for submission ${id}`;
            const body = `
                <p>Id: ${id}</p>
                <p>Wad Name: ${wadName}</p>
                <p>Wad Level: ${wadLevel}</p>
                <p>Wad Engine: ${wadEngine}</p>
                ${gzDoomAction ? `<p>${gzDoomAction}</p>` : ""}
                ${submitterName ? `<p>${submitterName}</p>` : ""}
                <p>Submitter created this map: ${author}</p>
                <p>distributable: ${distributable}</p>
                ${info ? `<pre>${info}</pre>` : ""}
                <p>email: ${email}</p>
                <p>download: ${downloadUrl}</p>
            `;
            modalTitle.innerHTML = title;
            modalContentWrapper.innerHTML = body;
            submissionInfoModal.show();
        }

        function loadEventListeners() {
            ((() => {
                const resumeRoundButton = document.getElementById("resumeRoundButton") ?? null;
                const pauseRoundButton = document.getElementById("pauseRoundButton") ?? null;

                async function pauseRound(pause) {
                    site.loading(true);
                    const resp = await fetch(`${baseUrl}/submissionRound/pauseRound?pause=${pause}`, {
                        method: "POST"
                    });
                    const json = await resp.json();
                    if (resp.status !== 200) {
                        alert(json.message);
                        return;
                    }
                    site.loading(false);
                    window.location.reload();
                }

                resumeRoundButton?.addEventListener("click", async ev => {
                    await pauseRound(false);
                });
                pauseRoundButton?.addEventListener("click", async ev => {
                    await pauseRound(true);
                });
            })());
        }

        function initDt() {
            $('.submissionsTable').each(function () {
                const el = $(this);
                const isPreviousRoundCard = el.closest(".preRoundCard").length > 0;
                const dtOpts = {
                    dom: 'Bfrtip',
                    stateSave: true,
                    scrollY: 600,
                    scrollX: false,
                    scrollCollapse: true,
                    paging: false,
                    fixedHeader: {
                        header: true
                    },
                    select: {
                        style: isPreviousRoundCard ? 'single' : 'multi'
                    },
                };


                const buttons = [
                    'colvis',
                    {
                        extend: 'selectedSingle',
                        text: 'Full info',
                        action: (e, dt) => {
                            const selectedRow = dt.row({selected: true}).data();
                            showSubmissionInfoModel.apply(undefined, selectedRow);
                        }
                    }
                ];

                if (!isPreviousRoundCard) {
                    buttons.push({
                        extend: 'selected',
                        text: 'Delete',
                        action: async (e, dt) => {
                            const confirm = window.confirm("Are you sure you wish to delete these entries?");
                            if (!confirm) {
                                return;
                            }
                            const idArr = [];
                            dt.rows({selected: true}).every(function () {
                                const data = this.data();
                                idArr.push(data[0]);
                            });
                            site.loading(true);
                            let response;
                            try {
                                response = await fetch(`${baseUrl}/submission/deleteEntries`, {
                                    method: "DELETE",
                                    headers: {
                                        'Accept': 'application/json',
                                        'Content-Type': 'application/json'
                                    },
                                    body: JSON.stringify(idArr)
                                });
                            } catch (e) {
                                alert(e.message);
                                return;
                            } finally {
                                site.loading(false);
                            }
                            const responseStatus = response.status;
                            const responseJson = await response.json();
                            if (responseStatus !== 200) {
                                return alert(responseJson.message);
                            }
                            dt.rows({selected: true}).remove().draw(false);
                        }
                    });
                }
                dtOpts["buttons"] = buttons;
                el.DataTable(dtOpts);
            });
        }
    });
</script>
</body>
</html>
